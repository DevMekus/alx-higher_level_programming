The ``0-add_integer.py`` module
======================

Using ``add_integer``
-------------------
This is a test File for the add_integer function First import
``add_integer`` From the 0-add_integer Module:

    >>> from 0-add_integer import add_integer

Now use it:

    >>> add_integer(6, 4)
    10
::

    >>> add_integer(2, -3)
    -1

Works with floating-point values.

::

    >>> add_integer(2.0, 3.0)
    5

Floats are casted to int before addition is performed.

::

    >>> add_integer(2.9, 0.2)
    2

::

    >>> add_integer(-2.9, -0.2)
    -2

Floating and non-floating point values.

::

    >>> add_integer(2.3, -3)
    -1

The second argument is optional

::

    >>> add_integer(2)
    100

Non-Numbers
===========
Fails with NaN numbers.

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
    

A TypeError message is only
printed for the first argument If both arguments are non-integers and non-floats

::

    >>> add_integer("kkk", "job")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Fails if infinity is provided.

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
     

::

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer


If either argument is a non-integer and non-float, a TypeError is raised:

::

    >>> add_integer("like", 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

::

    >>> add_integer(2, "like")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

::

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
